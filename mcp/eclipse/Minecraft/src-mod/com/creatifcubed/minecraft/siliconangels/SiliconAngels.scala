package com.creatifcubed.minecraft.siliconangels;

import _root_.cpw.mods.fml.common.{ Mod, SidedProxy, FMLLog };
import _root_.cpw.mods.fml.common.Mod.{ Instance, EventHandler };
import _root_.cpw.mods.fml.common.event.{ FMLPreInitializationEvent, FMLInitializationEvent, FMLPostInitializationEvent
  , FMLServerStartingEvent, FMLServerStoppingEvent };
import _root_.cpw.mods.fml.common.network.NetworkMod;

import java.util.logging.Logger;
import java.util.Arrays;

import com.creatifcubed.minecraft.siliconangels.network.{ PacketFactory, SiliconAngelsCommand };

@Mod(modid=SiliconAngels.MOD_ID, name=SiliconAngels.MOD_NAME, version=SiliconAngels.MOD_VERSION, modLanguage="scala")
@NetworkMod(serverSideRequired=true
    , clientSideRequired=false
    , channels=Array(SiliconAngels.MOD_NETWORKCHANNEL_A)
    , packetHandler=classOf[RegularPacketHandler]
    , tinyPacketHandler=classOf[TinyPacketHandler])
object SiliconAngels {
	final val MOD_ID = "silicon_angels";
	final val MOD_NAME = "Silicon Angels";
	final val MOD_VERSION = "0.0.1";
	final val MOD_AUTHORS = Array("Raekye");
	final val MOD_DESCRIPTION = "Minecraft Forge Player AI API";
	final val MOD_URL = "http://siangels.creatifcubed.com";
	final val MOD_CREDITS = "Hmmmm.";
	
	final val MOD_SHORTNAME = "SIAngels";
	final val MOD_PROXY_CLIENT = "com.creatifcubed.minecraft.siliconangels.ClientProxy";
	final val MOD_PROXY_COMMON = "com.creatifcubed.minecraft.siliconangels.CommonProxy";
	final val MOD_NETWORKCHANNEL_A = "a";
	
	final val log = Logger.getLogger(MOD_SHORTNAME);
	final val packetFactory = new PacketFactory();
	
	@SidedProxy(clientSide=MOD_PROXY_CLIENT, serverSide=MOD_PROXY_COMMON)
	var proxy: CommonProxy = null;
	
	@EventHandler
	def preInit(e: FMLPreInitializationEvent): Unit = {
	  log.setParent(FMLLog.getLogger());
	  e.getModMetadata().autogenerated = false;
	  e.getModMetadata().modId = MOD_ID;
	  e.getModMetadata().name = MOD_NAME;
	  e.getModMetadata().authorList = Arrays.asList(MOD_AUTHORS: _*);
	  e.getModMetadata().description = MOD_DESCRIPTION;
	  e.getModMetadata().url = MOD_URL;
	  e.getModMetadata().credits = MOD_CREDITS;
	}
	
	@EventHandler
	def init(e: FMLInitializationEvent): Unit = {
	  this.proxy.registerRegistries();
	}
	
	@EventHandler
	def postInit(e: FMLPostInitializationEvent): Unit = {
	  return;
	}
	
	@EventHandler
	def serverStarting(e: FMLServerStartingEvent): Unit = {
	  e.registerServerCommand(new SiliconAngelsCommand());
	}
	
	@EventHandler
	def serverStoppingEvent(e: FMLServerStoppingEvent): Unit = {
	  return;
	}
}